package Analizadores;
import static Analizadores.Tokens.*;
import java_cup.runtime.*;
import java.io.Reader;
//esto ya es un cambio
%%
%class lexico_cjs
%{
public static String errores="";
    private Symbol Symbol(int type){
        return new Symbol(type ,yyline, yycolumn);
    }
    private Symbol Symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }

    public static void errorLexico(String error,int x, int y ){
       errores+="error lexico \""+error+"\" en linea: "+Integer.toString(y)+" colulmna: "+Integer.toString(x)+"\n";
    }
%}
%public
%cup
%ignorecase
%line
%column
Comentario_simple = [\'][^][\n]
Comentario_multiple = [\'/][^][\'/]
Lineterminada = [\r|\n|\r\n]
WhiteSpace = ({Lineterminada} | [ \t\f]|[ |\t|\r|\f|\n])+
Comillas = [\"] [^][\"]
%%
{WhiteSpace} {/*Ignore*/}
(Comentario_multiple|Comentario_simple) 	{/*Ignore*/}
"."											{return new Symbol(symj.SPUN,yyline,yycolumn);}
"+"											{return new Symbol(symj.SMAS,yyline,yycolumn);}
"-"											{return new Symbol(symj.SMEN,yyline,yycolumn);}
"*"											{return new Symbol(symj.SMUL,yyline,yycolumn);}
"/"											{return new Symbol(symj.SDIV,yyline,yycolumn);}
"^"											{return new Symbol(symj.SPOT,yyline,yycolumn);}
"%"											{return new Symbol(symj.SMOD,yyline,yycolumn);}
">"											{return new Symbol(symj.SMAY,yyline,yycolumn);}
"<"											{return new Symbol(symj.SMEN,yyline,yycolumn);}
"("											{return new Symbol(symj.SIPA,yyline,yycolumn);}
")"											{return new Symbol(symj.SFPA,yyline,yycolumn);}
"="											{return new Symbol(symj.SIGU,yyline,yycolumn);}
","											{return new Symbol(symj.SCOM,yyline,yycolumn);}
";"											{return new Symbol(symj.SPYC,yyline,yycolumn);}
":"											{return new Symbol(symj.SDPN,yyline,yycolumn);}
"!"											{return new Symbol(symj.SNOT,yyline,yycolumn);}
"{"					 						{return new Symbol(symj.SILL,yyline,yycolumn);}
"}"											{return new Symbol(symj.SFLL,yyline,yycolumn);}
"||"										{return new Symbol(symj.SOR,yyline,yycolumn);}
"&&"										{return new Symbol(symj.SAND,yyline,yycolumn);}
"Si"										{return new Symbol(symj.RSI,yyline,yycolumn);}
"Sino"										{return new Symbol(symj.RSIN,yyline,yycolumn);}
"Para"										{return new Symbol(symj.RPAR,yyline,yycolumn);}
"DimV"										{return new Symbol(symj.RDIM,yyline,yycolumn);}
"Caso"										{return new Symbol(symj.RCAS,yyline,yycolumn);}
"Conteo"									{return new Symbol(symj.RCON,yyline,yycolumn);}
"Funcion"									{return new Symbol(symj.RFUN,yyline,yycolumn);}
"Obtener"									{return new Symbol(symj.ROBT,yyline,yycolumn);}
"Defecto"									{return new Symbol(symj.RDEF,yyline,yycolumn);}
"Detener"									{return new Symbol(symj.RDET,yyline,yycolumn);}
"Mensaje"									{return new Symbol(symj.RMEN,yyline,yycolumn);}
"Retornar"									{return new Symbol(symj.RRET,yyline,yycolumn);}
"Imprimir"									{return new Symbol(symj.RIMP,yyline,yycolumn);}
"aTexto()"									{return new Symbol(symj.RATE,yyline,yycolumn);}
"Mientras"									{return new Symbol(symj.RMIE,yyline,yycolumn);}
"Documento"									{return new Symbol(symj.RDOC,yyline,yycolumn);}
"Observador"								{return new Symbol(symj.ROBS,yyline,yycolumn);}
"Selecciona"								{return new Symbol(symj.RSEL,yyline,yycolumn);}
"setElemento"								{return new Symbol(symj.RSET,yyline,yycolumn);}
([+|-]?[0-9]+)								{return new Symbol(symj.PNUM,yyline,yycolumn);}			
{Comillas}									{return new Symbol(symj.PCOM,yyline,yycolumn,yytext());}
((a-Z)[.]~[ ,\n])							{return new Symbol(symj.PID,yyline, yycolumn,yytext());}
(['][0-9]+[/][0-9]+[/][0-9]+[0-9]+[" :"][0-9]+[":"][0-9]+[']) return new Symbol(symj.PHOR,yyline, yycolumn,yytext());}
([']([0-9]+[/][0-9]+[/][0-9]+)[']) 				{return new Symbol(symj.PFEC,yyline, yycolumn,yytext());}
.   										{ System.out.println("Caracter Invalido: "+yytext()+" Linea: "+ (int)(yyline+1)+" columa:"+(int)yycolumn+";");}